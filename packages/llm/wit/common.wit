package wavs:agent;

/// Common types shared across multiple interfaces
interface common {
  /// Common message structure for chat completions
  record message {
    role: string,
    content: option<string>,
    tool-calls: option<list<tool-call>>,
    tool-call-id: option<string>,
    name: option<string>,
  }
  
  /// Function parameter for tool calls
  record function-parameter {
    name: option<string>,
    description: option<string>,
    parameter-type: option<string>,
  }

  /// Function definition for tool calls
  record function {
    name: string,
    description: option<string>,
    parameters: option<string>,  // JSON schema as string
  }

  /// Tool definition for chat completions
  record tool {
    tool-type: string,
    function: function,
  }

  /// Tool call for chat completions
  record tool-call {
    id: string,
    tool-type: string,
    function: tool-call-function,
  }

  /// Function call details
  record tool-call-function {
    name: string,
    arguments: string,  // JSON string of arguments
  }

  /// Handler for custom tool calls
  resource custom-tool-handler {
    /// Returns true if this handler can handle the given tool name
    can-handle: func(tool-name: string) -> bool;

    /// Execute the tool call and return a result
    execute: func(tool-call: tool-call) -> result<string, string>;
  }
} 