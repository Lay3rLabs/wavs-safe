package wavs:agent;

interface contracts {
  use errors.{agent-error};

  /// Represents a smart contract that the DAO can interact with
  record contract {
    name: string,
    address: string,
    abi: string,
    description: option<string>,
  }

  /// Represents a contract function call
  record contract-call {
    function: string,
    args: list<string>,  // Using string to represent JSON values
  }

  /// Represents a transaction to be executed through a wallet
  record transaction {
    to: string,
    value: string,
    contract-call: option<contract-call>,
    data: string,
    description: string,
  }

  /// Helper methods for contracts
  resource contract-manager {
    /// Create a new Contract instance
    new: func(name: string, address: string, abi: string) -> contract;

    /// Create a new Contract instance with description
    new-with-description: func(
      name: string, 
      address: string, 
      abi: string, 
      description: string
    ) -> contract;

    /// Parse the JSON ABI to JsonAbi struct
    parse-abi: func(contract: contract) -> result<string, agent-error>;

    /// Encode a function call for this contract using the ABI
    encode-function-call: func(
      contract: contract,
      function-name: string,
      args: list<string>
    ) -> result<list<u8>, agent-error>;

    /// Find a function in the ABI
    find-function: func(
      contract: contract,
      function-name: string
    ) -> result<string, agent-error>;

    /// Validate function arguments against the ABI
    validate-function-call: func(
      contract: contract,
      function-name: string,
      args: list<string>
    ) -> result<_, agent-error>;
  }

  /// Transaction management
  resource transaction-manager {
    /// Basic validation of transaction fields
    is-valid: func(transaction: transaction) -> bool;

    /// Validate a transaction
    validate-transaction: func(transaction: transaction) -> result<_, agent-error>;

    /// Helper function to create a transaction payload from a Transaction
    create-payload-from-tx: func(transaction: transaction) -> result<string, agent-error>;
  }
}
